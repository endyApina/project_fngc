basePath: /v1
definitions:
  models.ContactUs:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      message:
        type: string
      phone_number:
        type: string
      subject:
        type: string
      updated_at:
        type: string
    type: object
  models.ExamPreparation:
    properties:
      class_type:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      exam_cost:
        type: string
      exam_id:
        type: string
      exam_profile:
        type: string
      exam_status:
        type: string
      id:
        type: integer
      personal_tutor:
        type: boolean
      student_id:
        description: logged in user unique id
        type: string
      study_pack:
        type: boolean
      training_duration:
        type: string
      training_type:
        type: string
      tutor_type:
        type: string
      updated_at:
        type: string
    type: object
  models.LoginData:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.RequestTutor:
    properties:
      exam_id:
        type: string
      exam_type:
        type: string
      gender:
        type: string
      student_id:
        type: string
    type: object
  models.ResetPassword:
    properties:
      new_password:
        type: string
      old_password:
        type: string
      reset_password_link:
        type: string
    type: object
  models.ResponseBody:
    properties:
      body:
        type: object
      code:
        type: integer
      message:
        type: string
    type: object
  models.Review:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      full_name:
        type: string
      id:
        type: integer
      review:
        type: string
      updated_at:
        type: string
    type: object
  models.StudentCurriculum:
    properties:
      class:
        type: string
      class_type:
        type: string
      subjject:
        type: string
    type: object
  models.StudyAbroad:
    properties:
      address:
        type: string
      country_of_study:
        type: string
      course:
        type: string
      created_at:
        type: string
      degree:
        type: string
      degree_level:
        type: string
      degree_prgramme:
        type: string
      deleted_at:
        type: string
      dob:
        type: string
      educational_level:
        type: string
      email:
        type: string
      enrollement_year:
        type: string
      enrollment_term:
        type: string
      financial_status:
        type: string
      first_name:
        type: string
      gender:
        type: string
      graduation_year:
        type: string
      high_school:
        type: string
      id:
        type: integer
      last_name:
        type: string
      marital_status:
        type: string
      nationality:
        type: string
      phone:
        type: string
      study_model:
        type: string
      university_name:
        type: string
      updated_at:
        type: string
      year_of_admission:
        type: string
    type: object
  models.Task:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      task:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.TutorDashboard:
    properties:
      students:
        items:
          $ref: '#/definitions/models.UserData'
        type: array
      task:
        items:
          $ref: '#/definitions/models.Task'
        type: array
    type: object
  models.TutorDegree:
    properties:
      college:
        type: string
      created_at:
        type: string
      degree:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      major:
        type: string
      tutor_id:
        type: string
      updated_at:
        type: string
      year:
        type: string
    type: object
  models.TutorEducationalData:
    properties:
      certified_teacher:
        type: boolean
      country:
        type: string
      educational_degree:
        items:
          $ref: '#/definitions/models.TutorDegree'
        type: array
      schedule:
        $ref: '#/definitions/models.TutorSchedule'
      subject_speciality:
        items:
          type: string
        type: array
      tutor_id:
        type: string
      work_experience:
        items:
          $ref: '#/definitions/models.TutorEmployment'
        type: array
    type: object
  models.TutorEmployment:
    properties:
      created_at:
        type: string
      date_of_employment:
        type: string
      deleted_at:
        type: string
      employer:
        type: string
      id:
        type: integer
      job_industry:
        type: string
      job_title:
        type: string
      time_agreement:
        type: string
      tutor_id:
        type: string
      updated_at:
        type: string
    type: object
  models.TutorRegistration:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      nigerian_resident:
        type: boolean
      password:
        type: string
      residence:
        type: string
      state_of_residence:
        type: string
      tutor_id:
        type: string
      tutor_type:
        type: string
      updated_at:
        type: string
    type: object
  models.TutorSchedule:
    properties:
      hours:
        type: string
      weekdays:
        items:
          type: string
        type: array
      weekend_hours:
        items:
          type: string
        type: array
      weekends:
        type: boolean
    type: object
  models.User:
    properties:
      address:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      password:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      user_type:
        type: string
    type: object
  models.UserData:
    properties:
      email:
        type: string
      full_name:
        type: string
      user_id:
        type: string
      user_type:
        type: string
    type: object
  models.UserRegistrationData:
    properties:
      address:
        type: string
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      user_type:
        type: string
    type: object
  models.VerifyUser:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      verification_otp:
        type: string
    type: object
host: petstore.swagger.io
info:
  contact:
    email: apinaendy@gmail.com
    name: Endy Apinageri
  description: This is official backend documentation for the fngc software
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: FNGC Backend Service
  version: "1.0"
paths:
  /admin/examination/{profile}:
    get:
      consumes:
      - application/json
      description: Retrieves all examination profiles
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.ExamPreparation'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Retrieves a list of all examination profile
      tags:
      - Admin
  /admin/examination/all:
    get:
      consumes:
      - application/json
      description: Retrieves all examination profiles
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.ExamPreparation'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Retrieves a list of all examination profile
      tags:
      - Admin
  /admin/student/abroad/all:
    get:
      consumes:
      - application/json
      description: Retrieves all abroad student data
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.StudyAbroad'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Retrieves a list of all abroad application students
      tags:
      - Admin
  /admin/student/all:
    get:
      consumes:
      - application/json
      description: Retrieves all students data
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Retrieves a list of all students
      tags:
      - Admin
  /admin/tutor/all:
    get:
      consumes:
      - application/json
      description: Retrieves all tutor data
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Retrieves a list of all tutors
      tags:
      - Admin
  /auth/login:
    post:
      consumes:
      - application/json
      description: Accept JSON data of User Login objects and returns valid response
      parameters:
      - description: The Tutor Login Data
        in: body
        name: StudentData
        required: true
        schema:
          $ref: '#/definitions/models.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.LoginData'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handle unique Unique User Login
      tags:
      - Authorization
  /auth/resetpassword:
    post:
      consumes:
      - application/json
      description: Accept JSON data of User Reset password objects and returns valid
        response
      parameters:
      - description: The User Data
        in: body
        name: StudentData
        required: true
        schema:
          $ref: '#/definitions/models.ResetPassword'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.ResetPassword'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handle resetting a user password
      tags:
      - Authorization
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Accept JSON data of Student User objects and returns valid response
      parameters:
      - description: The Student Registration Data
        in: body
        name: StudentData
        required: true
        schema:
          $ref: '#/definitions/models.UserRegistrationData'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.UserRegistrationData'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handle unique User Registration
      tags:
      - Authorization
  /auth/tutor/signup:
    post:
      consumes:
      - application/json
      description: Accept JSON data of Tutor Unique objects and returns valid response
      parameters:
      - description: The Tutor Registration Data
        in: body
        name: TutorRegistration
        required: true
        schema:
          $ref: '#/definitions/models.TutorRegistration'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.TutorRegistration'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handle unique Tutor Registration
      tags:
      - Authorization
  /auth/verifyotp:
    post:
      consumes:
      - application/json
      description: Accept JSON data of User Reset password objects and returns valid
        response
      parameters:
      - description: The User Verification Data
        in: body
        name: StudentData
        required: true
        schema:
          $ref: '#/definitions/models.VerifyUser'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.VerifyUser'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handle verifying user otp
      tags:
      - Authorization
  /student/curriculum/:
    get:
      consumes:
      - application/json
      description: Gets the list of all curricul courses  being taken by the student
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.StudentCurriculum'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handles getting student curriculum
      tags:
      - Student
  /student/examination/:
    post:
      consumes:
      - application/json
      description: Accept JSON data for examination objects and returns valid response
      parameters:
      - description: The Student Examination Data
        in: body
        name: ExaminationPreparationData
        required: true
        schema:
          $ref: '#/definitions/models.ExamPreparation'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.ExamPreparation'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handle apply for student examination
      tags:
      - Student
  /student/tutor/request:
    post:
      consumes:
      - application/json
      description: Accept JSON data for new tutor request
      parameters:
      - description: The Student Examination Data
        in: body
        name: RequestData
        required: true
        schema:
          $ref: '#/definitions/models.RequestTutor'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.RequestTutor'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handle student request for new tutor
      tags:
      - Student
  /tutor/dashboard/:
    get:
      consumes:
      - application/json
      description: Accept JSON data for examination objects and returns valid response
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.TutorDashboard'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handle apply for student examination
      tags:
      - Tutor
  /tutor/education/:
    post:
      consumes:
      - application/json
      description: Accept JSON data of User educational registration objects and returns
        valid response
      parameters:
      - description: The Tutor Educational Data
        in: body
        name: TutorEducationalData
        required: true
        schema:
          $ref: '#/definitions/models.TutorEducationalData'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.TutorEducationalData'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handle setting up tutor educational status
      tags:
      - Authorization
  /user/contactus/:
    post:
      consumes:
      - application/json
      description: Accept JSON data for contact details and message objects then returns
        valid response
      parameters:
      - description: The Task Data
        in: body
        name: ContactUs
        required: true
        schema:
          $ref: '#/definitions/models.ContactUs'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.ContactUs'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handle contact us request
      tags:
      - Hybrid APIs
  /user/review/:
    post:
      consumes:
      - application/json
      description: Accept JSON data for customer review and message objects then returns
        valid response
      parameters:
      - description: The Review Data
        in: body
        name: Review
        required: true
        schema:
          $ref: '#/definitions/models.Review'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.Review'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handle sending customer review
      tags:
      - Hybrid APIs
  /user/studyabroad/:
    post:
      consumes:
      - application/json
      description: Accept JSON data for study details objects and returns valid response
      parameters:
      - description: The Task Data
        in: body
        name: StudyAbroadData
        required: true
        schema:
          $ref: '#/definitions/models.StudyAbroad'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.StudyAbroad'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handle data to process abroad study
      tags:
      - Hybrid APIs
  /user/task/:
    post:
      consumes:
      - application/json
      description: Accept JSON data for examination objects and returns valid response
      parameters:
      - description: The Task Data
        in: body
        name: TaskData
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Check Response Message
          schema:
            $ref: '#/definitions/models.ResponseBody'
      summary: Handle adding task for users
      tags:
      - Hybrid APIs
swagger: "2.0"
